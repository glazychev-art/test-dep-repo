---
name: Update dep reposiotry
on:
  workflow_run:
    types:
      - completed
    workflows:
      - 'Update references'
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - run: |
          echo ${{ github.sha }}
  update-dep:
    name: Update dependent repo
    runs-on: ubuntu-latest
    steps:
      - name: Checkout ${{ github.repository }}
        uses: actions/checkout@v2
        with:
          fetch-depth: 2
          path: ${{ github.repository }}
          repository: ${{ github.repository }}
          token: ${{ secrets.BOT_GITHUB_TOKEN }}
      - uses: benjlevesque/short-sha@v1.2
        id: short-sha
        with:
          length: 7
      - name: Checkout networkservicemesh/test-dep2-repo
        uses: actions/checkout@v2
        with:
          path: glazychev-art/test-dep2-repo
          repository: glazychev-art/test-dep2-repo
          token: ${{ secrets.BOT_GITHUB_TOKEN }}
      - name: Get hash of PR commit
        run: |
          echo '::set-output name=hash::'$(git rev-parse HEAD^)
        id: get-pr-hash
      - name: Find merged PR
        uses: jwalton/gh-find-current-pr@v1.0.2
        id: findPr
        with:
          sha: ${{ steps.get-pr-hash.outputs.hash }}
          github-token: ${{ github.token }}
      - name: Add new file
        working-directory: glazychev-art/test-dep2-repo
        run: |
          touch ${{ github.sha }}
          echo "---" >> ${{ github.sha }}
          git add -- .
      - name: Push update to the test-dep2-repo
        working-directory: glazychev-art/test-dep2-repo
        run: |
          echo Starting to update repositotry test-dep2-repo
          git add -- .
          if ! [ -n "$(git diff --cached --exit-code)" ]; then
            echo Repository already up to date
            exit 0;
          fi
          git config --global user.email "nsmbot@networkservicmesh.io"
          git config --global user.name "NSMBot"
          echo "Update go.mod and go.sum to latest version from ${{ github.repository }}@main" >> /tmp/commit-message
          echo "PR link: https://github.com/${{ github.repository }}/pull/${{ steps.findPr.outputs.pr }}" >> /tmp/commit-message
          echo "" >> /tmp/commit-message
          LOG_MSG=$(git log --date=iso --pretty='format:Commit: %h%nAuthor: %an%nDate: %ad%nMessage:%n  - %B%n' -1 | sed '/^$/d;$d')
          for((i=2;i<=18;i+=2)); do n=$(printf '%*s' $((i+2))) m=$(printf '%*s' $i) LOG_MSG=$(echo "$LOG_MSG" | tr '\n' '|' | sed "s/${m}-/${n}-/2g" | tr '|' '\n'); done
          echo "$LOG_MSG" >> /tmp/commit-message
          echo "Commit Message:"
          cat /tmp/commit-message
          git commit -s -F /tmp/commit-message
          git checkout -b update/${{ github.repository }}
          git push -f origin update/${{ github.repository }}
